{"ast":null,"code":"var _jsxFileName = \"F:\\\\mentor\\\\ktx\\\\frontend\\\\src\\\\components\\\\PrivateRoute.tsx\";\nimport { Navigate } from 'react-router-dom';\nimport { authService } from '../services/auth.service';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  requireAdmin = false,\n  children\n}) => {\n  const currentUser = authService.getCurrentUser();\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  if (requireAdmin && currentUser.user.role !== 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateRoute","requireAdmin","children","currentUser","getCurrentUser","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","user","role","_c","$RefreshReg$"],"sources":["F:/mentor/ktx/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import { Navigate } from 'react-router-dom';\r\nimport { authService } from '../services/auth.service';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface PrivateRouteProps {\r\n  requireAdmin?: boolean;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PrivateRoute = ({ requireAdmin = false, children }: PrivateRouteProps) => {\r\n  const currentUser = authService.getCurrentUser();\r\n\r\n  if (!currentUser) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (requireAdmin && currentUser.user.role !== 'admin') {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default PrivateRoute; "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQvD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY,GAAG,KAAK;EAAEC;AAA4B,CAAC,KAAK;EAC9E,MAAMC,WAAW,GAAGR,WAAW,CAACS,cAAc,CAAC,CAAC;EAEhD,IAAI,CAACD,WAAW,EAAE;IAChB,oBAAON,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAIT,YAAY,IAAIE,WAAW,CAACQ,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;IACrD,oBAAOf,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,oBAAOb,OAAA,CAAAE,SAAA;IAAAG,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACW,EAAA,GAZIb,YAAY;AAclB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}