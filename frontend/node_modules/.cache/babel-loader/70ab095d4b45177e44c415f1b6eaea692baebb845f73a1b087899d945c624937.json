{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001/api';\nexport const authService = {\n  async login(credentials) {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, credentials);\n      if (response.data.success && response.data.data.token) {\n        localStorage.setItem('user', JSON.stringify(response.data.data));\n        return response.data.data;\n      }\n      throw new Error(response.data.message || 'Đăng nhập thất bại');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Đăng nhập thất bại');\n    }\n  },\n  logout() {\n    localStorage.removeItem('user');\n  },\n  getCurrentUser() {\n    const userStr = localStorage.getItem('user');\n    if (userStr) return JSON.parse(userStr);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","API_URL","authService","login","credentials","response","post","data","success","token","localStorage","setItem","JSON","stringify","Error","message","error","_error$response","_error$response$data","logout","removeItem","getCurrentUser","userStr","getItem","parse"],"sources":["F:/mentor/ktx - Copy/frontend/src/services/auth.service.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { LoginCredentials, AuthResponse } from '../types/user';\r\n\r\nconst API_URL = 'http://localhost:3001/api';\r\n\r\nexport const authService = {\r\n  async login(credentials: LoginCredentials): Promise<AuthResponse> {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/login`, credentials);\r\n      if (response.data.success && response.data.data.token) {\r\n        localStorage.setItem('user', JSON.stringify(response.data.data));\r\n        return response.data.data;\r\n      }\r\n      throw new Error(response.data.message || 'Đăng nhập thất bại');\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Đăng nhập thất bại');\r\n    }\r\n  },\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('user');\r\n  },\r\n\r\n  getCurrentUser(): AuthResponse | null {\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) return JSON.parse(userStr);\r\n    return null;\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,WAA6B,EAAyB;IAChE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,aAAa,EAAEG,WAAW,CAAC;MACvE,IAAIC,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAIH,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACE,KAAK,EAAE;QACrDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC;QAChE,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI;MAC3B;MACA,MAAM,IAAIO,KAAK,CAACT,QAAQ,CAACE,IAAI,CAACQ,OAAO,IAAI,oBAAoB,CAAC;IAChE,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACnB,MAAM,IAAIJ,KAAK,CAAC,EAAAG,eAAA,GAAAD,KAAK,CAACX,QAAQ,cAAAY,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBV,IAAI,cAAAW,oBAAA,uBAApBA,oBAAA,CAAsBH,OAAO,KAAI,oBAAoB,CAAC;IACxE;EACF,CAAC;EAEDI,MAAMA,CAAA,EAAS;IACbT,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAcA,CAAA,EAAwB;IACpC,MAAMC,OAAO,GAAGZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAID,OAAO,EAAE,OAAOV,IAAI,CAACY,KAAK,CAACF,OAAO,CAAC;IACvC,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}