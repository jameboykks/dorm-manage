{"ast":null,"code":"var _jsxFileName = \"F:\\\\mentor\\\\ktx\\\\frontend\\\\src\\\\pages\\\\student\\\\AvailableRooms.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Paper, Typography, Grid, Card, CardContent, CardActions, Button, Alert, CircularProgress, Box, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\nimport { roomService } from '../../services/room.service';\nimport { roomAssignmentService } from '../../services/roomAssignment.service';\nimport { authService } from '../../services/auth.service';\nimport { studentService } from '../../services/student.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AvailableRooms = () => {\n  _s();\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [hasRoomAssignment, setHasRoomAssignment] = useState(false);\n  const [autoRegisterDialogOpen, setAutoRegisterDialogOpen] = useState(false);\n  const [autoRegistering, setAutoRegistering] = useState(false);\n  const [success, setSuccess] = useState('');\n  const currentUser = authService.getCurrentUser();\n  const [studentId, setStudentId] = useState(null);\n  useEffect(() => {\n    fetchAvailableRooms();\n    checkRoomAssignment();\n    fetchStudentData();\n  }, []);\n  const fetchStudentData = async () => {\n    try {\n      if (!(currentUser !== null && currentUser !== void 0 && currentUser.user.id)) return;\n      const response = await studentService.getStudentByUserId(currentUser.user.id);\n      setStudentId(response.data.id);\n    } catch (err) {\n      console.error('Error fetching student data:', err);\n    }\n  };\n  const checkRoomAssignment = async () => {\n    try {\n      if (!(currentUser !== null && currentUser !== void 0 && currentUser.user.id)) return;\n\n      // Lấy thông tin sinh viên\n      const studentResponse = await studentService.getStudentByUserId(currentUser.user.id);\n      const studentId = studentResponse.data.id;\n\n      // Lấy danh sách yêu cầu đăng ký phòng\n      const assignmentsResponse = await roomAssignmentService.getRoomAssignments();\n      const assignments = assignmentsResponse.data || [];\n\n      // Kiểm tra xem sinh viên có yêu cầu đăng ký đang chờ hoặc đã có phòng không\n      const hasAssignment = assignments.some(assignment => assignment.studentId === studentId && (assignment.status === 'pending' || assignment.status === 'active'));\n      setHasRoomAssignment(hasAssignment);\n    } catch (err) {\n      console.error('Error checking room assignment:', err);\n    }\n  };\n  const fetchAvailableRooms = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      console.log('Fetching available rooms...');\n      const response = await roomService.getAllRooms();\n      console.log('API response:', response);\n\n      // Kiểm tra cấu trúc dữ liệu trả về\n      let allRooms = [];\n      if (response && response.data) {\n        // Nếu API trả về dữ liệu trong thuộc tính data\n        allRooms = Array.isArray(response.data) ? response.data : [];\n      } else if (Array.isArray(response)) {\n        // Nếu API trả về trực tiếp một mảng\n        allRooms = response;\n      } else {\n        console.error('Unexpected API response format:', response);\n        setError('Định dạng dữ liệu không hợp lệ');\n        setRooms([]);\n        return;\n      }\n\n      // Lọc các phòng còn trống\n      const availableRooms = allRooms.filter(room => room.status === 'available' || room.status === 'Đã có Người ở');\n      setRooms(availableRooms);\n      if (availableRooms.length === 0) {\n        setError('Hiện không có phòng nào khả dụng');\n      }\n    } catch (error) {\n      console.error('Error fetching rooms:', error);\n      setError(error.message || 'Có lỗi xảy ra khi tải danh sách phòng');\n      setRooms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRegisterRoom = roomId => {\n    navigate(`/student/room-registration/${roomId}`);\n  };\n  const handleAutoRegister = async () => {\n    if (!studentId) {\n      setError('Không tìm thấy thông tin sinh viên');\n      return;\n    }\n    setAutoRegistering(true);\n    setError('');\n    setSuccess('');\n    try {\n      // Tìm phòng còn trống đầu tiên\n      const availableRoom = rooms.find(room => room.status === 'available' || room.status === 'Đã có Người ở' && room.currentOccupancy < room.capacity);\n      if (!availableRoom) {\n        setError('Hiện không có phòng nào khả dụng');\n        return;\n      }\n\n      // Đăng ký phòng tự động\n      await roomAssignmentService.assignRoom({\n        roomId: availableRoom.id,\n        studentId: studentId,\n        startDate: new Date().toISOString().split('T')[0],\n        endDate: '',\n        isAdmin: true // Đánh dấu là đăng ký tự động, không cần xét duyệt\n      });\n      setSuccess(`Đã đăng ký thành công vào phòng ${availableRoom.building} - ${availableRoom.roomNumber}`);\n      setAutoRegisterDialogOpen(false);\n      navigate('/student/home');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Không thể đăng ký phòng tự động');\n    } finally {\n      setAutoRegistering(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Danh s\\xE1ch ph\\xF2ng c\\xF3 s\\u1EB5n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setAutoRegisterDialogOpen(true),\n          disabled: hasRoomAssignment || rooms.length === 0,\n          children: \"\\u0110\\u0103ng k\\xFD t\\u1EF1 \\u0111\\u1ED9ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), hasRoomAssignment && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 2\n        },\n        children: \"B\\u1EA1n \\u0111\\xE3 c\\xF3 y\\xEAu c\\u1EA7u \\u0111\\u0103ng k\\xFD ph\\xF2ng \\u0111ang ch\\u1EDD ph\\xEA duy\\u1EC7t ho\\u1EB7c \\u0111\\xE3 \\u0111\\u01B0\\u1EE3c g\\xE1n ph\\xF2ng.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: rooms.map(room => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: [\"Ph\\xF2ng \", room.roomNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: [\"T\\xF2a \", room.building, \" - T\\u1EA7ng \", room.floor]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Lo\\u1EA1i ph\\xF2ng: \", room.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Gi\\xE1 ph\\xF2ng: \", room.price.toLocaleString('vi-VN'), \" VN\\u0110/th\\xE1ng\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"S\\u1EE9c ch\\u1EE9a: \", room.currentOccupancy, \"/\", room.capacity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"primary\",\n                children: [\"Tr\\u1EA1ng th\\xE1i: \", room.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: () => handleRegisterRoom(room.id),\n                disabled: hasRoomAssignment,\n                children: \"\\u0110\\u0103ng k\\xFD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: autoRegisterDialogOpen,\n      onClose: () => !autoRegistering && setAutoRegisterDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"X\\xE1c nh\\u1EADn \\u0111\\u0103ng k\\xFD t\\u1EF1 \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"H\\u1EC7 th\\u1ED1ng s\\u1EBD t\\u1EF1 \\u0111\\u1ED9ng \\u0111\\u0103ng k\\xFD b\\u1EA1n v\\xE0o ph\\xF2ng c\\xF2n tr\\u1ED1ng \\u0111\\u1EA7u ti\\xEAn. B\\u1EA1n c\\xF3 ch\\u1EAFc ch\\u1EAFn mu\\u1ED1n ti\\u1EBFp t\\u1EE5c?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setAutoRegisterDialogOpen(false),\n          disabled: autoRegistering,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAutoRegister,\n          color: \"primary\",\n          disabled: autoRegistering,\n          autoFocus: true,\n          children: autoRegistering ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 32\n          }, this) : 'Xác nhận'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableRooms, \"zJ7uP1M4/9T4LJy86fInx6zmmRg=\", false, function () {\n  return [useNavigate];\n});\n_c = AvailableRooms;\nvar _c;\n$RefreshReg$(_c, \"AvailableRooms\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Paper","Typography","Grid","Card","CardContent","CardActions","Button","Alert","CircularProgress","Box","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","roomService","roomAssignmentService","authService","studentService","jsxDEV","_jsxDEV","AvailableRooms","_s","navigate","rooms","setRooms","loading","setLoading","error","setError","hasRoomAssignment","setHasRoomAssignment","autoRegisterDialogOpen","setAutoRegisterDialogOpen","autoRegistering","setAutoRegistering","success","setSuccess","currentUser","getCurrentUser","studentId","setStudentId","fetchAvailableRooms","checkRoomAssignment","fetchStudentData","user","id","response","getStudentByUserId","data","err","console","studentResponse","assignmentsResponse","getRoomAssignments","assignments","hasAssignment","some","assignment","status","log","getAllRooms","allRooms","Array","isArray","availableRooms","filter","room","length","message","handleRegisterRoom","roomId","handleAutoRegister","availableRoom","find","currentOccupancy","capacity","assignRoom","startDate","Date","toISOString","split","endDate","isAdmin","building","roomNumber","_err$response","_err$response$data","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","p","mt","mb","variant","gutterBottom","color","onClick","disabled","severity","container","spacing","map","item","xs","sm","md","floor","type","price","toLocaleString","size","open","onClose","autoFocus","_c","$RefreshReg$"],"sources":["F:/mentor/ktx/frontend/src/pages/student/AvailableRooms.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Alert,\r\n  CircularProgress,\r\n  Box,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions\r\n} from '@mui/material';\r\nimport { roomService } from '../../services/room.service';\r\nimport { roomAssignmentService } from '../../services/roomAssignment.service';\r\nimport { Room } from '../../types/room';\r\nimport { authService } from '../../services/auth.service';\r\nimport { studentService } from '../../services/student.service';\r\n\r\nexport const AvailableRooms: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [hasRoomAssignment, setHasRoomAssignment] = useState(false);\r\n  const [autoRegisterDialogOpen, setAutoRegisterDialogOpen] = useState(false);\r\n  const [autoRegistering, setAutoRegistering] = useState(false);\r\n  const [success, setSuccess] = useState('');\r\n  const currentUser = authService.getCurrentUser();\r\n  const [studentId, setStudentId] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchAvailableRooms();\r\n    checkRoomAssignment();\r\n    fetchStudentData();\r\n  }, []);\r\n\r\n  const fetchStudentData = async () => {\r\n    try {\r\n      if (!currentUser?.user.id) return;\r\n      const response = await studentService.getStudentByUserId(currentUser.user.id);\r\n      setStudentId(response.data.id);\r\n    } catch (err: any) {\r\n      console.error('Error fetching student data:', err);\r\n    }\r\n  };\r\n\r\n  const checkRoomAssignment = async () => {\r\n    try {\r\n      if (!currentUser?.user.id) return;\r\n      \r\n      // Lấy thông tin sinh viên\r\n      const studentResponse = await studentService.getStudentByUserId(currentUser.user.id);\r\n      const studentId = studentResponse.data.id;\r\n\r\n      // Lấy danh sách yêu cầu đăng ký phòng\r\n      const assignmentsResponse = await roomAssignmentService.getRoomAssignments();\r\n      const assignments = assignmentsResponse.data || [];\r\n\r\n      // Kiểm tra xem sinh viên có yêu cầu đăng ký đang chờ hoặc đã có phòng không\r\n      const hasAssignment = assignments.some((assignment: any) => \r\n        assignment.studentId === studentId && \r\n        (assignment.status === 'pending' || assignment.status === 'active')\r\n      );\r\n\r\n      setHasRoomAssignment(hasAssignment);\r\n    } catch (err: any) {\r\n      console.error('Error checking room assignment:', err);\r\n    }\r\n  };\r\n\r\n  const fetchAvailableRooms = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      console.log('Fetching available rooms...');\r\n      \r\n      const response = await roomService.getAllRooms();\r\n      console.log('API response:', response);\r\n      \r\n      // Kiểm tra cấu trúc dữ liệu trả về\r\n      let allRooms: Room[] = [];\r\n      \r\n      if (response && response.data) {\r\n        // Nếu API trả về dữ liệu trong thuộc tính data\r\n        allRooms = Array.isArray(response.data) ? response.data : [];\r\n      } else if (Array.isArray(response)) {\r\n        // Nếu API trả về trực tiếp một mảng\r\n        allRooms = response;\r\n      } else {\r\n        console.error('Unexpected API response format:', response);\r\n        setError('Định dạng dữ liệu không hợp lệ');\r\n        setRooms([]);\r\n        return;\r\n      }\r\n\r\n      // Lọc các phòng còn trống\r\n      const availableRooms = allRooms.filter((room: Room) => \r\n        room.status === 'available' || room.status === 'Đã có Người ở'\r\n      );\r\n      \r\n      setRooms(availableRooms);\r\n      if (availableRooms.length === 0) {\r\n        setError('Hiện không có phòng nào khả dụng');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error fetching rooms:', error);\r\n      setError(error.message || 'Có lỗi xảy ra khi tải danh sách phòng');\r\n      setRooms([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegisterRoom = (roomId: number) => {\r\n    navigate(`/student/room-registration/${roomId}`);\r\n  };\r\n\r\n  const handleAutoRegister = async () => {\r\n    if (!studentId) {\r\n      setError('Không tìm thấy thông tin sinh viên');\r\n      return;\r\n    }\r\n\r\n    setAutoRegistering(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      // Tìm phòng còn trống đầu tiên\r\n      const availableRoom = rooms.find(room => \r\n        room.status === 'available' || \r\n        (room.status === 'Đã có Người ở' && room.currentOccupancy < room.capacity)\r\n      );\r\n\r\n      if (!availableRoom) {\r\n        setError('Hiện không có phòng nào khả dụng');\r\n        return;\r\n      }\r\n\r\n      // Đăng ký phòng tự động\r\n      await roomAssignmentService.assignRoom({\r\n        roomId: availableRoom.id,\r\n        studentId: studentId,\r\n        startDate: new Date().toISOString().split('T')[0],\r\n        endDate: '',\r\n        isAdmin: true // Đánh dấu là đăng ký tự động, không cần xét duyệt\r\n      });\r\n\r\n      setSuccess(`Đã đăng ký thành công vào phòng ${availableRoom.building} - ${availableRoom.roomNumber}`);\r\n      setAutoRegisterDialogOpen(false);\r\n      navigate('/student/home');\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Không thể đăng ký phòng tự động');\r\n    } finally {\r\n      setAutoRegistering(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Paper sx={{ p: 4, mt: 4 }}>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Danh sách phòng có sẵn\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setAutoRegisterDialogOpen(true)}\r\n            disabled={hasRoomAssignment || rooms.length === 0}\r\n          >\r\n            Đăng ký tự động\r\n          </Button>\r\n        </Box>\r\n\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        {success && (\r\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n            {success}\r\n          </Alert>\r\n        )}\r\n\r\n        {hasRoomAssignment && (\r\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n            Bạn đã có yêu cầu đăng ký phòng đang chờ phê duyệt hoặc đã được gán phòng.\r\n          </Alert>\r\n        )}\r\n\r\n        <Grid container spacing={3}>\r\n          {rooms.map((room) => (\r\n            <Grid item xs={12} sm={6} md={4} key={room.id}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Phòng {room.roomNumber}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" gutterBottom>\r\n                    Tòa {room.building} - Tầng {room.floor}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    Loại phòng: {room.type}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    Giá phòng: {room.price.toLocaleString('vi-VN')} VNĐ/tháng\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    Sức chứa: {room.currentOccupancy}/{room.capacity}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"primary\">\r\n                    Trạng thái: {room.status}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button \r\n                    size=\"small\" \r\n                    color=\"primary\"\r\n                    onClick={() => handleRegisterRoom(room.id)}\r\n                    disabled={hasRoomAssignment}\r\n                  >\r\n                    Đăng ký\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Dialog xác nhận đăng ký tự động */}\r\n      <Dialog\r\n        open={autoRegisterDialogOpen}\r\n        onClose={() => !autoRegistering && setAutoRegisterDialogOpen(false)}\r\n      >\r\n        <DialogTitle>Xác nhận đăng ký tự động</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Hệ thống sẽ tự động đăng ký bạn vào phòng còn trống đầu tiên. Bạn có chắc chắn muốn tiếp tục?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setAutoRegisterDialogOpen(false)} \r\n            disabled={autoRegistering}\r\n          >\r\n            Hủy\r\n          </Button>\r\n          <Button \r\n            onClick={handleAutoRegister} \r\n            color=\"primary\" \r\n            disabled={autoRegistering}\r\n            autoFocus\r\n          >\r\n            {autoRegistering ? <CircularProgress size={24} /> : 'Xác nhận'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}