{"ast":null,"code":"import axiosInstance from './axios.config';\nexport const notificationService = {\n  getNotifications: async () => {\n    try {\n      const response = await axiosInstance.get('/notifications');\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Không thể tải thông báo');\n    }\n  },\n  markAsRead: async notificationId => {\n    try {\n      await axiosInstance.put(`/notifications/${notificationId}/read`);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Không thể đánh dấu thông báo đã đọc');\n    }\n  },\n  markAllAsRead: async () => {\n    try {\n      await axiosInstance.put('/notifications/read-all');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Không thể đánh dấu tất cả thông báo đã đọc');\n    }\n  },\n  deleteNotification: async notificationId => {\n    try {\n      await axiosInstance.delete(`/notifications/${notificationId}`);\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Không thể xóa thông báo');\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","notificationService","getNotifications","response","get","data","error","_error$response","_error$response$data","Error","message","markAsRead","notificationId","put","_error$response2","_error$response2$data","markAllAsRead","_error$response3","_error$response3$data","deleteNotification","delete","_error$response4","_error$response4$data"],"sources":["F:/mentor/ktx/frontend/src/services/notification.service.ts"],"sourcesContent":["import axiosInstance from './axios.config';\r\n\r\nexport interface UserNotification {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n  createdAt: string;\r\n  isRead: boolean;\r\n}\r\n\r\nexport const notificationService = {\r\n  getNotifications: async (): Promise<UserNotification[]> => {\r\n    try {\r\n      const response = await axiosInstance.get('/notifications');\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Không thể tải thông báo');\r\n    }\r\n  },\r\n\r\n  markAsRead: async (notificationId: number): Promise<void> => {\r\n    try {\r\n      await axiosInstance.put(`/notifications/${notificationId}/read`);\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Không thể đánh dấu thông báo đã đọc');\r\n    }\r\n  },\r\n\r\n  markAllAsRead: async (): Promise<void> => {\r\n    try {\r\n      await axiosInstance.put('/notifications/read-all');\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Không thể đánh dấu tất cả thông báo đã đọc');\r\n    }\r\n  },\r\n\r\n  deleteNotification: async (notificationId: number): Promise<void> => {\r\n    try {\r\n      await axiosInstance.delete(`/notifications/${notificationId}`);\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Không thể xóa thông báo');\r\n    }\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,aAAa,MAAM,gBAAgB;AAU1C,OAAO,MAAMC,mBAAmB,GAAG;EACjCC,gBAAgB,EAAE,MAAAA,CAAA,KAAyC;IACzD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,gBAAgB,CAAC;MAC1D,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACnB,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,yBAAyB,CAAC;IAC7E;EACF,CAAC;EAEDC,UAAU,EAAE,MAAOC,cAAsB,IAAoB;IAC3D,IAAI;MACF,MAAMZ,aAAa,CAACa,GAAG,CAAC,kBAAkBD,cAAc,OAAO,CAAC;IAClE,CAAC,CAAC,OAAON,KAAU,EAAE;MAAA,IAAAQ,gBAAA,EAAAC,qBAAA;MACnB,MAAM,IAAIN,KAAK,CAAC,EAAAK,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBT,IAAI,cAAAU,qBAAA,uBAApBA,qBAAA,CAAsBL,OAAO,KAAI,qCAAqC,CAAC;IACzF;EACF,CAAC;EAEDM,aAAa,EAAE,MAAAA,CAAA,KAA2B;IACxC,IAAI;MACF,MAAMhB,aAAa,CAACa,GAAG,CAAC,yBAAyB,CAAC;IACpD,CAAC,CAAC,OAAOP,KAAU,EAAE;MAAA,IAAAW,gBAAA,EAAAC,qBAAA;MACnB,MAAM,IAAIT,KAAK,CAAC,EAAAQ,gBAAA,GAAAX,KAAK,CAACH,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsBR,OAAO,KAAI,4CAA4C,CAAC;IAChG;EACF,CAAC;EAEDS,kBAAkB,EAAE,MAAOP,cAAsB,IAAoB;IACnE,IAAI;MACF,MAAMZ,aAAa,CAACoB,MAAM,CAAC,kBAAkBR,cAAc,EAAE,CAAC;IAChE,CAAC,CAAC,OAAON,KAAU,EAAE;MAAA,IAAAe,gBAAA,EAAAC,qBAAA;MACnB,MAAM,IAAIb,KAAK,CAAC,EAAAY,gBAAA,GAAAf,KAAK,CAACH,QAAQ,cAAAkB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBZ,OAAO,KAAI,yBAAyB,CAAC;IAC7E;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}