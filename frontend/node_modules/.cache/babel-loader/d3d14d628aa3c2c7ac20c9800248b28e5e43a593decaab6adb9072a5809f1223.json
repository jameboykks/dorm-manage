{"ast":null,"code":"import{Navigate}from'react-router-dom';import{authService}from'../services/auth.service';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{requireAdmin=false,children}=_ref;const currentUser=authService.getCurrentUser();if(!currentUser){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(requireAdmin&&currentUser.user.role!=='admin'){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default PrivateRoute;","map":{"version":3,"names":["Navigate","authService","jsx","_jsx","Fragment","_Fragment","PrivateRoute","_ref","requireAdmin","children","currentUser","getCurrentUser","to","replace","user","role"],"sources":["F:/mentor/ktx/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import { Navigate } from 'react-router-dom';\r\nimport { authService } from '../services/auth.service';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface PrivateRouteProps {\r\n  requireAdmin?: boolean;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PrivateRoute = ({ requireAdmin = false, children }: PrivateRouteProps) => {\r\n  const currentUser = authService.getCurrentUser();\r\n\r\n  if (!currentUser) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (requireAdmin && currentUser.user.role !== 'admin') {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default PrivateRoute; "],"mappings":"AAAA,OAASA,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAQvD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAA2D,IAA1D,CAAEC,YAAY,CAAG,KAAK,CAAEC,QAA4B,CAAC,CAAAF,IAAA,CACzE,KAAM,CAAAG,WAAW,CAAGT,WAAW,CAACU,cAAc,CAAC,CAAC,CAEhD,GAAI,CAACD,WAAW,CAAE,CAChB,mBAAOP,IAAA,CAACH,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIL,YAAY,EAAIE,WAAW,CAACI,IAAI,CAACC,IAAI,GAAK,OAAO,CAAE,CACrD,mBAAOZ,IAAA,CAACH,QAAQ,EAACY,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CAEA,mBAAOV,IAAA,CAAAE,SAAA,EAAAI,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}