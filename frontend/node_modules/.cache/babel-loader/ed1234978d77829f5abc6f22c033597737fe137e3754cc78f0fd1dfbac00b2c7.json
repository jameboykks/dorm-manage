{"ast":null,"code":"import axios from 'axios';\nimport { authService } from './auth.service';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nconst axiosInstance = axios.create({\n  baseURL: `${API_URL}/api/notifications`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\naxiosInstance.interceptors.request.use(config => {\n  const user = authService.getCurrentUser();\n  if (user !== null && user !== void 0 && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nclass NotificationService {\n  async createNotification(data) {\n    const response = await axiosInstance.post('/', data);\n    return response.data;\n  }\n  async getNotifications() {\n    const response = await axiosInstance.get('/');\n    return response.data;\n  }\n  async getNotificationById(id) {\n    const response = await axiosInstance.get(`/${id}`);\n    return response.data;\n  }\n  async deleteNotification(id) {\n    const response = await axiosInstance.delete(`/${id}`);\n    return response.data;\n  }\n  async markAsRead(id) {\n    const response = await axiosInstance.patch(`/${id}/read`);\n    return response.data;\n  }\n}\nexport const notificationService = new NotificationService();\nexport default notificationService;","map":{"version":3,"names":["axios","authService","API_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","headers","interceptors","request","use","config","user","getCurrentUser","token","Authorization","error","Promise","reject","NotificationService","createNotification","data","response","post","getNotifications","get","getNotificationById","id","deleteNotification","delete","markAsRead","patch","notificationService"],"sources":["F:/mentor/ktx/frontend/src/services/notification.service.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { authService } from './auth.service';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\r\n\r\nexport interface CreateNotificationDto {\r\n  title: string;\r\n  content: string;\r\n  type: string;\r\n  recipientId: string;\r\n}\r\n\r\nexport interface Notification {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n  type: string;\r\n  recipientId: string;\r\n  isRead: boolean;\r\n  createdAt: string;\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: `${API_URL}/api/notifications`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const user = authService.getCurrentUser();\r\n    if (user?.token) {\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nclass NotificationService {\r\n  async createNotification(data: CreateNotificationDto) {\r\n    const response = await axiosInstance.post('/', data);\r\n    return response.data;\r\n  }\r\n\r\n  async getNotifications() {\r\n    const response = await axiosInstance.get('/');\r\n    return response.data;\r\n  }\r\n\r\n  async getNotificationById(id: number) {\r\n    const response = await axiosInstance.get(`/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async deleteNotification(id: number) {\r\n    const response = await axiosInstance.delete(`/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async markAsRead(id: number) {\r\n    const response = await axiosInstance.patch(`/${id}/read`);\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport const notificationService = new NotificationService();\r\n\r\nexport default notificationService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAmBxE,MAAMC,aAAa,GAAGN,KAAK,CAACO,MAAM,CAAC;EACjCC,OAAO,EAAE,GAAGN,OAAO,oBAAoB;EACvCO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,IAAI,GAAGb,WAAW,CAACc,cAAc,CAAC,CAAC;EACzC,IAAID,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,KAAK,EAAE;IACfH,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,IAAI,CAACE,KAAK,EAAE;EACvD;EACA,OAAOH,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,MAAMG,mBAAmB,CAAC;EACxB,MAAMC,kBAAkBA,CAACC,IAA2B,EAAE;IACpD,MAAMC,QAAQ,GAAG,MAAMlB,aAAa,CAACmB,IAAI,CAAC,GAAG,EAAEF,IAAI,CAAC;IACpD,OAAOC,QAAQ,CAACD,IAAI;EACtB;EAEA,MAAMG,gBAAgBA,CAAA,EAAG;IACvB,MAAMF,QAAQ,GAAG,MAAMlB,aAAa,CAACqB,GAAG,CAAC,GAAG,CAAC;IAC7C,OAAOH,QAAQ,CAACD,IAAI;EACtB;EAEA,MAAMK,mBAAmBA,CAACC,EAAU,EAAE;IACpC,MAAML,QAAQ,GAAG,MAAMlB,aAAa,CAACqB,GAAG,CAAC,IAAIE,EAAE,EAAE,CAAC;IAClD,OAAOL,QAAQ,CAACD,IAAI;EACtB;EAEA,MAAMO,kBAAkBA,CAACD,EAAU,EAAE;IACnC,MAAML,QAAQ,GAAG,MAAMlB,aAAa,CAACyB,MAAM,CAAC,IAAIF,EAAE,EAAE,CAAC;IACrD,OAAOL,QAAQ,CAACD,IAAI;EACtB;EAEA,MAAMS,UAAUA,CAACH,EAAU,EAAE;IAC3B,MAAML,QAAQ,GAAG,MAAMlB,aAAa,CAAC2B,KAAK,CAAC,IAAIJ,EAAE,OAAO,CAAC;IACzD,OAAOL,QAAQ,CAACD,IAAI;EACtB;AACF;AAEA,OAAO,MAAMW,mBAAmB,GAAG,IAAIb,mBAAmB,CAAC,CAAC;AAE5D,eAAea,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}